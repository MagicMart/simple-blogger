{"id":"../node_modules/remark-parse/lib/util/get-indentation.js","dependencies":[{"name":"/home/martin/Web-development/parcel-react-template/empty-project-babel-css-react/package.json","includedInParent":true,"mtime":1555527510973},{"name":"/home/martin/Web-development/parcel-react-template/empty-project-babel-css-react/node_modules/remark-parse/package.json","includedInParent":true,"mtime":1555527796783}],"generated":{"js":"'use strict';\n\nmodule.exports = indentation;\n\n/* Map of characters, and their column length,\n * which can be used as indentation. */\nvar characters = {' ': 1, '\\t': 4};\n\n/* Gets indentation information for a line. */\nfunction indentation(value) {\n  var index = 0;\n  var indent = 0;\n  var character = value.charAt(index);\n  var stops = {};\n  var size;\n\n  while (character in characters) {\n    size = characters[character];\n\n    indent += size;\n\n    if (size > 1) {\n      indent = Math.floor(indent / size) * size;\n    }\n\n    stops[indent] = index;\n\n    character = value.charAt(++index);\n  }\n\n  return {indent: indent, stops: stops};\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/remark-parse/lib/util/get-indentation.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/remark-parse/lib/util/get-indentation.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/remark-parse/lib/util/get-indentation.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/remark-parse/lib/util/get-indentation.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/remark-parse/lib/util/get-indentation.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/remark-parse/lib/util/get-indentation.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/remark-parse/lib/util/get-indentation.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/remark-parse/lib/util/get-indentation.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/remark-parse/lib/util/get-indentation.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/remark-parse/lib/util/get-indentation.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/remark-parse/lib/util/get-indentation.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/remark-parse/lib/util/get-indentation.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/remark-parse/lib/util/get-indentation.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/remark-parse/lib/util/get-indentation.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/remark-parse/lib/util/get-indentation.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/remark-parse/lib/util/get-indentation.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/remark-parse/lib/util/get-indentation.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/remark-parse/lib/util/get-indentation.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/remark-parse/lib/util/get-indentation.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/remark-parse/lib/util/get-indentation.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/remark-parse/lib/util/get-indentation.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/remark-parse/lib/util/get-indentation.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/remark-parse/lib/util/get-indentation.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/remark-parse/lib/util/get-indentation.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/remark-parse/lib/util/get-indentation.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/remark-parse/lib/util/get-indentation.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/remark-parse/lib/util/get-indentation.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/remark-parse/lib/util/get-indentation.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/remark-parse/lib/util/get-indentation.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/remark-parse/lib/util/get-indentation.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/remark-parse/lib/util/get-indentation.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/remark-parse/lib/util/get-indentation.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/remark-parse/lib/util/get-indentation.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}}],"sources":{"../node_modules/remark-parse/lib/util/get-indentation.js":"'use strict';\n\nmodule.exports = indentation;\n\n/* Map of characters, and their column length,\n * which can be used as indentation. */\nvar characters = {' ': 1, '\\t': 4};\n\n/* Gets indentation information for a line. */\nfunction indentation(value) {\n  var index = 0;\n  var indent = 0;\n  var character = value.charAt(index);\n  var stops = {};\n  var size;\n\n  while (character in characters) {\n    size = characters[character];\n\n    indent += size;\n\n    if (size > 1) {\n      indent = Math.floor(indent / size) * size;\n    }\n\n    stops[indent] = index;\n\n    character = value.charAt(++index);\n  }\n\n  return {indent: indent, stops: stops};\n}\n"},"lineCount":33}},"error":null,"hash":"750f75da5b4857882e686a8d436af91d","cacheData":{"env":{}}}