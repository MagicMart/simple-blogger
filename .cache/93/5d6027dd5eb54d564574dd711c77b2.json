{"id":"../node_modules/ramda/src/reject.js","dependencies":[{"name":"/home/martin/Web-development/parcel-react-template/empty-project-babel-css-react/package.json","includedInParent":true,"mtime":1555527510973},{"name":"/home/martin/Web-development/parcel-react-template/empty-project-babel-css-react/node_modules/ramda/package.json","includedInParent":true,"mtime":1555527797771},{"name":"./internal/_complement","loc":{"line":1,"column":39},"parent":"/home/martin/Web-development/parcel-react-template/empty-project-babel-css-react/node_modules/ramda/src/reject.js","resolved":"/home/martin/Web-development/parcel-react-template/empty-project-babel-css-react/node_modules/ramda/src/internal/_complement.js"},{"name":"./internal/_curry2","loc":{"line":3,"column":35},"parent":"/home/martin/Web-development/parcel-react-template/empty-project-babel-css-react/node_modules/ramda/src/reject.js","resolved":"/home/martin/Web-development/parcel-react-template/empty-project-babel-css-react/node_modules/ramda/src/internal/_curry2.js"},{"name":"./filter","loc":{"line":5,"column":34},"parent":"/home/martin/Web-development/parcel-react-template/empty-project-babel-css-react/node_modules/ramda/src/reject.js","resolved":"/home/martin/Web-development/parcel-react-template/empty-project-babel-css-react/node_modules/ramda/src/filter.js"}],"generated":{"js":"var _complement = /*#__PURE__*/require('./internal/_complement');\n\nvar _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar filter = /*#__PURE__*/require('./filter');\n\n/**\n * The complement of [`filter`](#filter).\n *\n * Acts as a transducer if a transformer is given in list position. Filterable\n * objects include plain objects or any object that has a filter method such\n * as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array}\n * @see R.filter, R.transduce, R.addIndex\n * @example\n *\n *      const isOdd = (n) => n % 2 === 1;\n *\n *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\n\n\nvar reject = /*#__PURE__*/_curry2(function reject(pred, filterable) {\n  return filter(_complement(pred), filterable);\n});\nmodule.exports = reject;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ramda/src/reject.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ramda/src/reject.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ramda/src/reject.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ramda/src/reject.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ramda/src/reject.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ramda/src/reject.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ramda/src/reject.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ramda/src/reject.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ramda/src/reject.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ramda/src/reject.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ramda/src/reject.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ramda/src/reject.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ramda/src/reject.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ramda/src/reject.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ramda/src/reject.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ramda/src/reject.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ramda/src/reject.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ramda/src/reject.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ramda/src/reject.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ramda/src/reject.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ramda/src/reject.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ramda/src/reject.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ramda/src/reject.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ramda/src/reject.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ramda/src/reject.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ramda/src/reject.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ramda/src/reject.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ramda/src/reject.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ramda/src/reject.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ramda/src/reject.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ramda/src/reject.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/ramda/src/reject.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/ramda/src/reject.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/ramda/src/reject.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/ramda/src/reject.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/ramda/src/reject.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}}],"sources":{"../node_modules/ramda/src/reject.js":"var _complement = /*#__PURE__*/require('./internal/_complement');\n\nvar _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar filter = /*#__PURE__*/require('./filter');\n\n/**\n * The complement of [`filter`](#filter).\n *\n * Acts as a transducer if a transformer is given in list position. Filterable\n * objects include plain objects or any object that has a filter method such\n * as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array}\n * @see R.filter, R.transduce, R.addIndex\n * @example\n *\n *      const isOdd = (n) => n % 2 === 1;\n *\n *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\n\n\nvar reject = /*#__PURE__*/_curry2(function reject(pred, filterable) {\n  return filter(_complement(pred), filterable);\n});\nmodule.exports = reject;"},"lineCount":36}},"error":null,"hash":"385f414cbdfe2f0eb689ebf20b05d2f3","cacheData":{"env":{}}}