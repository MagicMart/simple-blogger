{"id":"../node_modules/remark-parse/lib/tokenize/text.js","dependencies":[{"name":"/home/martin/Web-development/parcel-react-template/empty-project-babel-css-react/package.json","includedInParent":true,"mtime":1555527510973},{"name":"/home/martin/Web-development/parcel-react-template/empty-project-babel-css-react/node_modules/remark-parse/package.json","includedInParent":true,"mtime":1555527796783}],"generated":{"js":"'use strict';\n\nmodule.exports = text;\n\nfunction text(eat, value, silent) {\n  var self = this;\n  var methods;\n  var tokenizers;\n  var index;\n  var length;\n  var subvalue;\n  var position;\n  var tokenizer;\n  var name;\n  var min;\n  var now;\n\n  /* istanbul ignore if - never used (yet) */\n  if (silent) {\n    return true;\n  }\n\n  methods = self.inlineMethods;\n  length = methods.length;\n  tokenizers = self.inlineTokenizers;\n  index = -1;\n  min = value.length;\n\n  while (++index < length) {\n    name = methods[index];\n\n    if (name === 'text' || !tokenizers[name]) {\n      continue;\n    }\n\n    tokenizer = tokenizers[name].locator;\n\n    if (!tokenizer) {\n      eat.file.fail('Missing locator: `' + name + '`');\n    }\n\n    position = tokenizer.call(self, value, 1);\n\n    if (position !== -1 && position < min) {\n      min = position;\n    }\n  }\n\n  subvalue = value.slice(0, min);\n  now = eat.now();\n\n  self.decode(subvalue, now, function (content, position, source) {\n    eat(source || content)({\n      type: 'text',\n      value: content\n    });\n  });\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/remark-parse/lib/tokenize/text.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/text.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/text.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/text.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/text.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/text.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/text.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/text.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/text.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/text.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/text.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/text.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/text.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/text.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/text.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/text.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/text.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/text.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/text.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/text.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/text.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/text.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/text.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/text.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/text.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/text.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/text.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/text.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/text.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/text.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/text.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/text.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/text.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/text.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/text.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/text.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/text.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/text.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/text.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/text.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/text.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/text.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/text.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/text.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/text.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/text.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/text.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/text.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/text.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/text.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/text.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/text.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/text.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/text.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/text.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/text.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/text.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/text.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/text.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}}],"sources":{"../node_modules/remark-parse/lib/tokenize/text.js":"'use strict';\n\nmodule.exports = text;\n\nfunction text(eat, value, silent) {\n  var self = this;\n  var methods;\n  var tokenizers;\n  var index;\n  var length;\n  var subvalue;\n  var position;\n  var tokenizer;\n  var name;\n  var min;\n  var now;\n\n  /* istanbul ignore if - never used (yet) */\n  if (silent) {\n    return true;\n  }\n\n  methods = self.inlineMethods;\n  length = methods.length;\n  tokenizers = self.inlineTokenizers;\n  index = -1;\n  min = value.length;\n\n  while (++index < length) {\n    name = methods[index];\n\n    if (name === 'text' || !tokenizers[name]) {\n      continue;\n    }\n\n    tokenizer = tokenizers[name].locator;\n\n    if (!tokenizer) {\n      eat.file.fail('Missing locator: `' + name + '`');\n    }\n\n    position = tokenizer.call(self, value, 1);\n\n    if (position !== -1 && position < min) {\n      min = position;\n    }\n  }\n\n  subvalue = value.slice(0, min);\n  now = eat.now();\n\n  self.decode(subvalue, now, function (content, position, source) {\n    eat(source || content)({\n      type: 'text',\n      value: content\n    });\n  });\n}\n"},"lineCount":59}},"error":null,"hash":"2db7a1ef4c4b3271dacd34c09a2e1c77","cacheData":{"env":{}}}