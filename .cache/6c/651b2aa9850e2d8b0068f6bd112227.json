{"id":"XYKd","dependencies":[{"name":"/home/martin/Web-development/parcel-react-template/empty-project-babel-css-react/package.json","includedInParent":true,"mtime":1555347791161},{"name":"/home/martin/Web-development/parcel-react-template/empty-project-babel-css-react/node_modules/ramda/package.json","includedInParent":true,"mtime":1555279877954}],"generated":{"js":"module.exports=Array.isArray||function(r){return null!=r&&r.length>=0&&\"[object Array]\"===Object.prototype.toString.call(r)};"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ramda/src/internal/_isArray.js","original":{"line":13,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ramda/src/internal/_isArray.js","original":{"line":13,"column":0},"generated":{"line":1,"column":7}},{"source":"../node_modules/ramda/src/internal/_isArray.js","original":{"line":13,"column":0},"generated":{"line":1,"column":15}},{"source":"../node_modules/ramda/src/internal/_isArray.js","original":{"line":13,"column":0},"generated":{"line":1,"column":21}},{"source":"../node_modules/ramda/src/internal/_isArray.js","original":{"line":13,"column":0},"generated":{"line":1,"column":30}},{"source":"../node_modules/ramda/src/internal/_isArray.js","original":{"line":13,"column":0},"generated":{"line":1,"column":39}},{"source":"../node_modules/ramda/src/internal/_isArray.js","original":{"line":14,"column":0},"generated":{"line":1,"column":42}},{"source":"../node_modules/ramda/src/internal/_isArray.js","original":{"line":14,"column":0},"generated":{"line":1,"column":49}},{"source":"../node_modules/ramda/src/internal/_isArray.js","original":{"line":14,"column":0},"generated":{"line":1,"column":55}},{"source":"../node_modules/ramda/src/internal/_isArray.js","original":{"line":14,"column":0},"generated":{"line":1,"column":58}},{"source":"../node_modules/ramda/src/internal/_isArray.js","original":{"line":14,"column":0},"generated":{"line":1,"column":60}},{"source":"../node_modules/ramda/src/internal/_isArray.js","original":{"line":14,"column":0},"generated":{"line":1,"column":68}},{"source":"../node_modules/ramda/src/internal/_isArray.js","original":{"line":14,"column":0},"generated":{"line":1,"column":71}},{"source":"../node_modules/ramda/src/internal/_isArray.js","original":{"line":14,"column":0},"generated":{"line":1,"column":90}},{"source":"../node_modules/ramda/src/internal/_isArray.js","original":{"line":14,"column":0},"generated":{"line":1,"column":97}},{"source":"../node_modules/ramda/src/internal/_isArray.js","original":{"line":14,"column":0},"generated":{"line":1,"column":107}},{"source":"../node_modules/ramda/src/internal/_isArray.js","original":{"line":14,"column":0},"generated":{"line":1,"column":116}},{"source":"../node_modules/ramda/src/internal/_isArray.js","original":{"line":14,"column":0},"generated":{"line":1,"column":121}}],"sources":{"../node_modules/ramda/src/internal/_isArray.js":"/**\n * Tests whether or not an object is an array.\n *\n * @private\n * @param {*} val The object to test.\n * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n * @example\n *\n *      _isArray([]); //=> true\n *      _isArray(null); //=> false\n *      _isArray({}); //=> false\n */\nmodule.exports = Array.isArray || function _isArray(val) {\n  return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n};"},"lineCount":null}},"error":null,"hash":"1553844d40a13c8c91349ed665856a0b","cacheData":{"env":{}}}