{"id":"../node_modules/react-markdown/lib/plugins/naive-html.js","dependencies":[{"name":"/home/martin/Web-development/parcel-react-template/empty-project-babel-css-react/package.json","includedInParent":true,"mtime":1555527510973},{"name":"/home/martin/Web-development/parcel-react-template/empty-project-babel-css-react/node_modules/react-markdown/package.json","includedInParent":true,"mtime":1555527796783},{"name":"unist-util-visit","loc":{"line":8,"column":20},"parent":"/home/martin/Web-development/parcel-react-template/empty-project-babel-css-react/node_modules/react-markdown/lib/plugins/naive-html.js","resolved":"/home/martin/Web-development/parcel-react-template/empty-project-babel-css-react/node_modules/unist-util-visit/index.js"}],"generated":{"js":"\"use strict\";\n\n/**\n * Naive, simple plugin to match inline nodes without attributes\n * This allows say <strong>foo</strong>, but not <strong class=\"very\">foo</strong>\n * For proper HTML support, you'll want a different plugin\n **/\nvar visit = require('unist-util-visit');\n\nvar type = 'virtualHtml';\nvar selfClosingRe = /^<(area|base|br|col|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)\\s*\\/?>$/i;\nvar simpleTagRe = /^<(\\/?)([a-z]+)\\s*>$/;\n\nmodule.exports = function (tree) {\n  var open;\n  var currentParent;\n  visit(tree, 'html', function (node, index, parent) {\n    if (currentParent !== parent) {\n      open = [];\n      currentParent = parent;\n    }\n\n    var selfClosing = getSelfClosing(node);\n\n    if (selfClosing) {\n      parent.children.splice(index, 1, {\n        type: type,\n        tag: selfClosing,\n        position: node.position\n      });\n      return true;\n    }\n\n    var current = getSimpleTag(node, parent);\n\n    if (!current) {\n      return true;\n    }\n\n    var matching = findAndPull(open, current.tag);\n\n    if (matching) {\n      parent.children.splice(index, 0, virtual(current, matching, parent));\n    } else if (!current.opening) {\n      open.push(current);\n    }\n\n    return true;\n  }, true // Iterate in reverse\n  );\n  return tree;\n};\n\nfunction findAndPull(open, matchingTag) {\n  var i = open.length;\n\n  while (i--) {\n    if (open[i].tag === matchingTag) {\n      return open.splice(i, 1)[0];\n    }\n  }\n\n  return false;\n}\n\nfunction getSimpleTag(node, parent) {\n  var match = node.value.match(simpleTagRe);\n  return match ? {\n    tag: match[2],\n    opening: !match[1],\n    node: node\n  } : false;\n}\n\nfunction getSelfClosing(node) {\n  var match = node.value.match(selfClosingRe);\n  return match ? match[1] : false;\n}\n\nfunction virtual(fromNode, toNode, parent) {\n  var fromIndex = parent.children.indexOf(fromNode.node);\n  var toIndex = parent.children.indexOf(toNode.node);\n  var extracted = parent.children.splice(fromIndex, toIndex - fromIndex + 1);\n  var children = extracted.slice(1, -1);\n  return {\n    type: type,\n    children: children,\n    tag: fromNode.tag,\n    position: {\n      start: fromNode.node.position.start,\n      end: toNode.node.position.end,\n      indent: []\n    }\n  };\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/react-markdown/lib/plugins/naive-html.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}}],"sources":{"../node_modules/react-markdown/lib/plugins/naive-html.js":"\"use strict\";\n\n/**\n * Naive, simple plugin to match inline nodes without attributes\n * This allows say <strong>foo</strong>, but not <strong class=\"very\">foo</strong>\n * For proper HTML support, you'll want a different plugin\n **/\nvar visit = require('unist-util-visit');\n\nvar type = 'virtualHtml';\nvar selfClosingRe = /^<(area|base|br|col|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)\\s*\\/?>$/i;\nvar simpleTagRe = /^<(\\/?)([a-z]+)\\s*>$/;\n\nmodule.exports = function (tree) {\n  var open;\n  var currentParent;\n  visit(tree, 'html', function (node, index, parent) {\n    if (currentParent !== parent) {\n      open = [];\n      currentParent = parent;\n    }\n\n    var selfClosing = getSelfClosing(node);\n\n    if (selfClosing) {\n      parent.children.splice(index, 1, {\n        type: type,\n        tag: selfClosing,\n        position: node.position\n      });\n      return true;\n    }\n\n    var current = getSimpleTag(node, parent);\n\n    if (!current) {\n      return true;\n    }\n\n    var matching = findAndPull(open, current.tag);\n\n    if (matching) {\n      parent.children.splice(index, 0, virtual(current, matching, parent));\n    } else if (!current.opening) {\n      open.push(current);\n    }\n\n    return true;\n  }, true // Iterate in reverse\n  );\n  return tree;\n};\n\nfunction findAndPull(open, matchingTag) {\n  var i = open.length;\n\n  while (i--) {\n    if (open[i].tag === matchingTag) {\n      return open.splice(i, 1)[0];\n    }\n  }\n\n  return false;\n}\n\nfunction getSimpleTag(node, parent) {\n  var match = node.value.match(simpleTagRe);\n  return match ? {\n    tag: match[2],\n    opening: !match[1],\n    node: node\n  } : false;\n}\n\nfunction getSelfClosing(node) {\n  var match = node.value.match(selfClosingRe);\n  return match ? match[1] : false;\n}\n\nfunction virtual(fromNode, toNode, parent) {\n  var fromIndex = parent.children.indexOf(fromNode.node);\n  var toIndex = parent.children.indexOf(toNode.node);\n  var extracted = parent.children.splice(fromIndex, toIndex - fromIndex + 1);\n  var children = extracted.slice(1, -1);\n  return {\n    type: type,\n    children: children,\n    tag: fromNode.tag,\n    position: {\n      start: fromNode.node.position.start,\n      end: toNode.node.position.end,\n      indent: []\n    }\n  };\n}"},"lineCount":95}},"error":null,"hash":"aba561e4287e634002aa7d50fba1ec4c","cacheData":{"env":{}}}