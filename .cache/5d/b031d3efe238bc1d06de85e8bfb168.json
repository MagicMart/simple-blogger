{"id":"Kp65","dependencies":[{"name":"/home/martin/Web-development/parcel-react-template/empty-project-babel-css-react/package.json","includedInParent":true,"mtime":1555347791161},{"name":"/home/martin/Web-development/parcel-react-template/empty-project-babel-css-react/node_modules/parse-entities/package.json","includedInParent":true,"mtime":1555279877954}],"generated":{"js":"\"use strict\";var e;function t(t){var n,r=\"&\"+t+\";\";return(e=e||document.createElement(\"i\")).innerHTML=r,(\";\"!==(n=e.textContent).slice(-1)||\"semi\"===t)&&(n!==r&&n)}module.exports=t;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/parse-entities/decode-entity.browser.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/parse-entities/decode-entity.browser.js","original":{"line":5,"column":0},"generated":{"line":1,"column":13}},{"source":"../node_modules/parse-entities/decode-entity.browser.js","original":{"line":5,"column":0},"generated":{"line":1,"column":17}},{"source":"../node_modules/parse-entities/decode-entity.browser.js","original":{"line":9,"column":0},"generated":{"line":1,"column":19}},{"source":"../node_modules/parse-entities/decode-entity.browser.js","original":{"line":9,"column":0},"generated":{"line":1,"column":28}},{"source":"../node_modules/parse-entities/decode-entity.browser.js","original":{"line":9,"column":0},"generated":{"line":1,"column":30}},{"source":"../node_modules/parse-entities/decode-entity.browser.js","original":{"line":10,"column":0},"generated":{"line":1,"column":33}},{"source":"../node_modules/parse-entities/decode-entity.browser.js","original":{"line":11,"column":0},"generated":{"line":1,"column":37}},{"source":"../node_modules/parse-entities/decode-entity.browser.js","original":{"line":10,"column":0},"generated":{"line":1,"column":39}},{"source":"../node_modules/parse-entities/decode-entity.browser.js","original":{"line":10,"column":0},"generated":{"line":1,"column":41}},{"source":"../node_modules/parse-entities/decode-entity.browser.js","original":{"line":10,"column":0},"generated":{"line":1,"column":45}},{"source":"../node_modules/parse-entities/decode-entity.browser.js","original":{"line":10,"column":0},"generated":{"line":1,"column":47}},{"source":"../node_modules/parse-entities/decode-entity.browser.js","original":{"line":22,"column":0},"generated":{"line":1,"column":51}},{"source":"../node_modules/parse-entities/decode-entity.browser.js","original":{"line":13,"column":0},"generated":{"line":1,"column":58}},{"source":"../node_modules/parse-entities/decode-entity.browser.js","original":{"line":13,"column":0},"generated":{"line":1,"column":60}},{"source":"../node_modules/parse-entities/decode-entity.browser.js","original":{"line":13,"column":0},"generated":{"line":1,"column":63}},{"source":"../node_modules/parse-entities/decode-entity.browser.js","original":{"line":13,"column":0},"generated":{"line":1,"column":72}},{"source":"../node_modules/parse-entities/decode-entity.browser.js","original":{"line":13,"column":0},"generated":{"line":1,"column":86}},{"source":"../node_modules/parse-entities/decode-entity.browser.js","original":{"line":14,"column":0},"generated":{"line":1,"column":92}},{"source":"../node_modules/parse-entities/decode-entity.browser.js","original":{"line":14,"column":0},"generated":{"line":1,"column":102}},{"source":"../node_modules/parse-entities/decode-entity.browser.js","original":{"line":22,"column":0},"generated":{"line":1,"column":105}},{"source":"../node_modules/parse-entities/decode-entity.browser.js","original":{"line":15,"column":0},"generated":{"line":1,"column":112}},{"source":"../node_modules/parse-entities/decode-entity.browser.js","original":{"line":15,"column":0},"generated":{"line":1,"column":114}},{"source":"../node_modules/parse-entities/decode-entity.browser.js","original":{"line":15,"column":0},"generated":{"line":1,"column":116}},{"source":"../node_modules/parse-entities/decode-entity.browser.js","original":{"line":22,"column":0},"generated":{"line":1,"column":129}},{"source":"../node_modules/parse-entities/decode-entity.browser.js","original":{"line":22,"column":0},"generated":{"line":1,"column":136}},{"source":"../node_modules/parse-entities/decode-entity.browser.js","original":{"line":22,"column":0},"generated":{"line":1,"column":140}},{"source":"../node_modules/parse-entities/decode-entity.browser.js","original":{"line":22,"column":0},"generated":{"line":1,"column":149}},{"source":"../node_modules/parse-entities/decode-entity.browser.js","original":{"line":27,"column":0},"generated":{"line":1,"column":154}},{"source":"../node_modules/parse-entities/decode-entity.browser.js","original":{"line":27,"column":0},"generated":{"line":1,"column":158}},{"source":"../node_modules/parse-entities/decode-entity.browser.js","original":{"line":27,"column":0},"generated":{"line":1,"column":161}},{"source":"../node_modules/parse-entities/decode-entity.browser.js","original":{"line":7,"column":0},"generated":{"line":1,"column":164}},{"source":"../node_modules/parse-entities/decode-entity.browser.js","original":{"line":7,"column":0},"generated":{"line":1,"column":171}},{"source":"../node_modules/parse-entities/decode-entity.browser.js","original":{"line":7,"column":0},"generated":{"line":1,"column":179}}],"sources":{"../node_modules/parse-entities/decode-entity.browser.js":"'use strict'\n\n/* eslint-env browser */\n\nvar el\n\nmodule.exports = decodeEntity\n\nfunction decodeEntity(characters) {\n  var entity = '&' + characters + ';'\n  var char\n\n  el = el || document.createElement('i')\n  el.innerHTML = entity\n  char = el.textContent\n\n  // Some entities do not require the closing semicolon (&not - for instance),\n  // which leads to situations where parsing the assumed entity of &notit; will\n  // result in the string `Â¬it;`.  When we encounter a trailing semicolon after\n  // parsing and the entity to decode was not a semicolon (&semi;), we can\n  // assume that the matching was incomplete\n  if (char.slice(-1) === ';' && characters !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the entity was not valid\n  return char === entity ? false : char\n}\n"},"lineCount":null}},"error":null,"hash":"201d2ae9735f49d0f200ac0593afb78a","cacheData":{"env":{}}}