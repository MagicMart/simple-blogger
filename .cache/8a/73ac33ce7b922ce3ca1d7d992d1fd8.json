{"id":"../node_modules/remark-parse/lib/tokenize/newline.js","dependencies":[{"name":"/home/martin/Web-development/parcel-react-template/empty-project-babel-css-react/package.json","includedInParent":true,"mtime":1555527510973},{"name":"/home/martin/Web-development/parcel-react-template/empty-project-babel-css-react/node_modules/remark-parse/package.json","includedInParent":true,"mtime":1555527796783},{"name":"is-whitespace-character","loc":{"line":3,"column":25},"parent":"/home/martin/Web-development/parcel-react-template/empty-project-babel-css-react/node_modules/remark-parse/lib/tokenize/newline.js","resolved":"/home/martin/Web-development/parcel-react-template/empty-project-babel-css-react/node_modules/is-whitespace-character/index.js"}],"generated":{"js":"'use strict';\n\nvar whitespace = require('is-whitespace-character');\n\nmodule.exports = newline;\n\n/* Tokenise newline. */\nfunction newline(eat, value, silent) {\n  var character = value.charAt(0);\n  var length;\n  var subvalue;\n  var queue;\n  var index;\n\n  if (character !== '\\n') {\n    return;\n  }\n\n  /* istanbul ignore if - never used (yet) */\n  if (silent) {\n    return true;\n  }\n\n  index = 1;\n  length = value.length;\n  subvalue = character;\n  queue = '';\n\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (!whitespace(character)) {\n      break;\n    }\n\n    queue += character;\n\n    if (character === '\\n') {\n      subvalue += queue;\n      queue = '';\n    }\n\n    index++;\n  }\n\n  eat(subvalue);\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/remark-parse/lib/tokenize/newline.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/newline.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/newline.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/newline.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/newline.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/newline.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/newline.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/newline.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/newline.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/newline.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/newline.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/newline.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/newline.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/newline.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/newline.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/newline.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/newline.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/newline.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/newline.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/newline.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/newline.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/newline.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/newline.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/newline.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/newline.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/newline.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/newline.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/newline.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/newline.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/newline.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/newline.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/newline.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/newline.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/newline.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/newline.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/newline.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/newline.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/newline.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/newline.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/newline.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/newline.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/newline.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/newline.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/newline.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/newline.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/newline.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/newline.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/remark-parse/lib/tokenize/newline.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}}],"sources":{"../node_modules/remark-parse/lib/tokenize/newline.js":"'use strict';\n\nvar whitespace = require('is-whitespace-character');\n\nmodule.exports = newline;\n\n/* Tokenise newline. */\nfunction newline(eat, value, silent) {\n  var character = value.charAt(0);\n  var length;\n  var subvalue;\n  var queue;\n  var index;\n\n  if (character !== '\\n') {\n    return;\n  }\n\n  /* istanbul ignore if - never used (yet) */\n  if (silent) {\n    return true;\n  }\n\n  index = 1;\n  length = value.length;\n  subvalue = character;\n  queue = '';\n\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (!whitespace(character)) {\n      break;\n    }\n\n    queue += character;\n\n    if (character === '\\n') {\n      subvalue += queue;\n      queue = '';\n    }\n\n    index++;\n  }\n\n  eat(subvalue);\n}\n"},"lineCount":48}},"error":null,"hash":"c082cb57e97bb967f0e82e63b9b5f639","cacheData":{"env":{}}}